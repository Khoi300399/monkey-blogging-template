{"version":3,"file":"static/js/755.59d09649.chunk.js","mappings":"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","sources":["components/Button/Button.tsx","components/Button/Toggle.tsx","components/Heading/Heading.tsx","components/Heading/DashboardHeading.tsx","components/Heading/Tag.tsx","components/Loading/Loading.tsx","components/Post/PostCategory.tsx","components/Post/PostTitle.tsx","components/Post/PostMeta.tsx","components/Post/PostImage.tsx","components/PostCard/PostCard.tsx","components/Post/PostRelate.tsx","layouts/Banner.tsx","components/FeatureCard/FeatureCard.tsx","layouts/Feature.tsx","components/NewestCard/NewestCard.tsx","components/NewestCard/NewestCardLarge.tsx","layouts/Newest.tsx","pages/Home/Home.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Loading } from \"../Loading\";\r\ntype ButtonType = \"button\" | \"submit\" | \"reset\" | undefined;\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  className: string;\r\n  type?: ButtonType;\r\n  isLoading?: boolean;\r\n  disabled?: boolean;\r\n  height?: number;\r\n  href?: string;\r\n  style?: Object;\r\n};\r\n\r\nconst Button = ({\r\n  children,\r\n  className = \"button\",\r\n  type = \"button\",\r\n  isLoading,\r\n  disabled,\r\n  href,\r\n  style,\r\n  ...props\r\n}: Props) => {\r\n  const child: React.ReactNode = !!isLoading ? <Loading /> : children;\r\n\r\n  if (href !== \"\" && typeof href === \"string\") {\r\n    return (\r\n      <NavLink style={style} className={`button ${className}`} to={href}>\r\n        {child}\r\n      </NavLink>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      type={type}\r\n      disabled={disabled}\r\n      className={`button ${className}`}\r\n      {...props}\r\n    >\r\n      {child}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useField } from \"formik\";\r\nimport { memo } from \"react\";\r\n\r\ntype Props = {\r\n  on?: boolean;\r\n  type: string;\r\n  name: string;\r\n};\r\n\r\nconst Toggle = ({ on, ...props }: Props) => {\r\n  const [field] = useField(props);\r\n\r\n  return (\r\n    <div className=\"toggle\">\r\n      <label>\r\n        <input className=\"hidden-input\" {...props} {...field} />\r\n        <div className={`toggle-container ${on ? \"on\" : \"\"}`} {...props}>\r\n          <span className={`toggle-circle  ${on ? \"on\" : \"\"}`}></span>\r\n        </div>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Toggle);\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nconst Heading = ({ children }: Props) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">{children}</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import { memo } from \"react\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  title?: string;\r\n};\r\n\r\nconst DashboardHeading = ({ children, title }: Props) => {\r\n  return (\r\n    <div className=\"dashboard-heading\">\r\n      <h1 className=\"dashboard-title\">{children}</h1>\r\n      <p className=\"dashboard-desc\">{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(DashboardHeading);\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst Tag = ({ children }: Props) => {\r\n  return <span className=\"tag\">{children}</span>;\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  className?: string;\r\n};\r\n\r\nconst Loading = ({ className }: Props) => {\r\n  return <div className={`loading ${className}`}></div>;\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nconst PostCategory = ({ children, className = \"primary\" }: Props) => {\r\n  return (\r\n    <Link to=\"\" className={`post-category ${className}`}>\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default PostCategory;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  to?: string | undefined;\r\n};\r\n\r\nconst PostTitle = ({ children, className = \"big white\", to }: Props) => {\r\n  if (to)\r\n    return (\r\n      <>\r\n        <Link to={to} className={`post-title ${className}`}>\r\n          <h3> {children}</h3>\r\n        </Link>\r\n      </>\r\n    );\r\n  return <h3 className={`post-title ${className}`}> {children}</h3>;\r\n};\r\n\r\nexport default PostTitle;\r\n","type Props = {\r\n  date?: string | null | undefined;\r\n  authors?: string | null | undefined;\r\n  className?: string;\r\n};\r\n\r\nconst PostMeta = ({\r\n  date = \"Mar 23\",\r\n  authors = \"Andiez Le\",\r\n  className = \"black\",\r\n}: Props) => {\r\n  return (\r\n    <div className={`post-meta ${className}`}>\r\n      <span className=\"authors\">{authors}</span>\r\n      <span className=\"time\">{date}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostMeta;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  src: string;\r\n  alt?: string;\r\n  to?: string;\r\n  className: string;\r\n};\r\n\r\nconst PostImage = ({ src, alt, className, to }: Props) => {\r\n  if (to)\r\n    return (\r\n      <Link\r\n        className={`post-image ${className}`}\r\n        to={to}\r\n        style={{ display: \"block\" }}\r\n      >\r\n        <img src={src} alt={alt} loading=\"lazy\" />\r\n      </Link>\r\n    );\r\n  return (\r\n    <div className={`post-image ${className}`}>\r\n      <img src={src} alt={alt} loading=\"lazy\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostImage;\r\n","import { memo } from \"react\";\r\nimport PostCategory from \"../Post/PostCategory\";\r\nimport PostImage from \"../Post/PostImage\";\r\nimport PostMeta from \"../Post/PostMeta\";\r\nimport PostTitle from \"../Post/PostTitle\";\r\nimport { PostType } from \"../../redux/postReducer/postReducer\";\r\n\r\ntype Props = {\r\n  post: PostType;\r\n};\r\n\r\nconst PostCard = ({ post }: Props) => {\r\n  return (\r\n    <div className=\"post-card\">\r\n      <PostImage\r\n        to={`/post-detail?id=${post.id}`}\r\n        className=\"post\"\r\n        src={post.image || \"\"}\r\n        alt=\"unsplash\"\r\n      />\r\n      <PostCategory className=\"primary mb\">{post.category?.name}</PostCategory>\r\n\r\n      <PostTitle to={`/post-detail?id=${post.id}`} className=\"normal black\">\r\n        {post.title}\r\n      </PostTitle>\r\n      <PostMeta date={post.createAt} authors={post.author}></PostMeta>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(PostCard);\r\n","import React, { useEffect } from \"react\";\r\nimport { PostCard } from \"../PostCard\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DispathType, RootState } from \"../../redux/config\";\r\nimport { getPostRelateApi } from \"../../redux/postReducer/postReducer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ntype Props = {\r\n  categoryId: string;\r\n};\r\n\r\nconst PostRelate = ({ categoryId }: Props) => {\r\n  const dispatch = useDispatch<DispathType>();\r\n  const { postRelate } = useSelector((state: RootState) => state.postReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostRelateApi(categoryId));\r\n  }, [categoryId, dispatch]);\r\n  return (\r\n    <div className=\"grid-layout grid-layout-primary\">\r\n      {postRelate.map((post) => {\r\n        return <PostCard key={post.id} post={post}></PostCard>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostRelate;\r\n","import React from \"react\";\r\nimport { Button } from \"../components/Button\";\r\n\r\ntype Props = {};\r\n\r\nconst Banner = (props: Props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"banner\">\r\n        <div className=\"banner-content\">\r\n          <h1 className=\"banner-heading\">Monkey Blogging</h1>\r\n          <p className=\"banner-desc\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ut in\r\n            inventore minus? Voluptatem culpa aliquam numquam, magni labore,\r\n            quaerat dolorum, voluptatum nostrum dolores placeat quis incidunt\r\n            cupiditate consectetur! Veritatis, reiciendis.\r\n          </p>\r\n          <Button className=\"banner-button\" href=\"/sign-in\">\r\n            Get Started\r\n          </Button>\r\n        </div>\r\n        <div className=\"banner-image\">\r\n          <img src=\"./img/banner.png\" alt=\"banner\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import { memo, useEffect } from \"react\";\r\nimport { PostCategory, PostImage, PostMeta, PostTitle } from \"../Post\";\r\nimport {\r\n  PostType,\r\n  getCategoriesApi,\r\n} from \"../../redux/postReducer/postReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DispathType, RootState } from \"../../redux/config\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  data: PostType;\r\n};\r\n\r\nconst FeatureCard = ({ data }: Props) => {\r\n  const dispatch = useDispatch<DispathType>();\r\n  const { categories } = useSelector((state: RootState) => state.postReducer);\r\n  useEffect(() => {\r\n    dispatch(getCategoriesApi());\r\n  }, [dispatch]);\r\n  if (data && data.image)\r\n    return (\r\n      <div className=\"feature-card\">\r\n        <PostImage\r\n          to={`/post-detail?id=${data.id}`}\r\n          className=\"feature\"\r\n          src={data?.image}\r\n          alt={data?.imageName}\r\n        />\r\n        <Link\r\n          to={`/post-detail?id=${data.id}`}\r\n          className=\"feature-card-overlay\"\r\n        ></Link>\r\n        <div className=\"feature-card-content\">\r\n          <div className=\"feature-card-top\">\r\n            <PostCategory>{categories[0]?.name}</PostCategory>\r\n            <PostMeta\r\n              className=\"white feature\"\r\n              date={data.createAt}\r\n              authors={data?.author}\r\n            ></PostMeta>\r\n          </div>\r\n          <PostTitle to={`/post-detail?id=${data.id}`}>{data?.title}</PostTitle>\r\n        </div>\r\n      </div>\r\n    );\r\n  return null;\r\n};\r\n\r\nexport default memo(FeatureCard);\r\n","import { memo, useEffect } from \"react\";\r\nimport { FeatureCard } from \"../components/FeatureCard\";\r\nimport { Heading } from \"../components/Heading\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DispathType, RootState } from \"../redux/config\";\r\nimport { PostType, getPostFeatureApi } from \"../redux/postReducer/postReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ntype Props = {};\r\n\r\nconst Feature = (props: Props) => {\r\n  const dispatch = useDispatch<DispathType>();\r\n  useEffect(() => {\r\n    dispatch(getPostFeatureApi());\r\n  }, [dispatch]);\r\n  const { postFeature } = useSelector((state: RootState) => state.postReducer);\r\n  if (!postFeature) return null;\r\n  return (\r\n    <div className=\"feature\">\r\n      <div className=\"container\">\r\n        <Heading>Bài viết nổi bật</Heading>\r\n        <div className=\"grid-layout\">\r\n          {postFeature?.map((item: PostType) => {\r\n            return <FeatureCard key={item.id} data={item}></FeatureCard>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Feature);\r\n","import { memo } from \"react\";\r\nimport { PostCategory, PostImage, PostMeta, PostTitle } from \"../Post\";\r\nimport { PostType } from \"../../redux/postReducer/postReducer\";\r\n\r\ntype Props = {\r\n  data: PostType;\r\n  to?: string;\r\n};\r\n\r\nconst NewstCard = ({ data }: Props) => {\r\n  return (\r\n    <div className=\"newest-card\">\r\n      <PostImage\r\n        className=\"newest\"\r\n        src={data.image || \"\"}\r\n        alt=\"unsplash\"\r\n        to={`/post-detail?id=${data.id}`}\r\n      />\r\n      <div className=\"newest-card-content\">\r\n        <PostCategory className=\"secondary mb\">\r\n          {data.category?.name}\r\n        </PostCategory>\r\n        <PostTitle to={`/post-detail?id=${data.id}`} className=\"normal black\">\r\n          {data.title}\r\n        </PostTitle>\r\n        <PostMeta date={data.createAt} authors={data.author}></PostMeta>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(NewstCard);\r\n","import { memo } from \"react\";\r\nimport { PostCategory, PostImage, PostMeta, PostTitle } from \"../Post\";\r\nimport { PostType } from \"../../redux/postReducer/postReducer\";\r\n\r\ntype Props = {\r\n  data: PostType;\r\n};\r\n\r\nconst NewstCardLarge = ({ data }: Props) => {\r\n  const url = \"/post-detail?id=\" + data?.id;\r\n  return (\r\n    <div>\r\n      <PostImage\r\n        to={`/post-detail?id=${data?.id || \"\"}`}\r\n        className=\"newest-large\"\r\n        src={data?.image || \"\"}\r\n        alt=\"unsplash\"\r\n      />\r\n      <PostCategory className=\"primary mb\">\r\n        {data?.category?.name || \"\"}\r\n      </PostCategory>\r\n\r\n      <PostTitle to={url} className=\"big black\">\r\n        {data?.title}\r\n      </PostTitle>\r\n      <PostMeta date={data?.createAt} authors={data?.author}></PostMeta>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(NewstCardLarge);\r\n","import { memo, useEffect } from \"react\";\r\nimport { Heading } from \"../components/Heading\";\r\nimport { NewstCard, NewstCardLarge } from \"../components/NewestCard\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DispathType, RootState } from \"../redux/config\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getPostsApi } from \"../redux/postReducer/postReducer\";\r\n\r\ntype Props = {};\r\n\r\nconst Newest = (props: Props) => {\r\n  const dispatch = useDispatch<DispathType>();\r\n  const { posts } = useSelector((state: RootState) => state.postReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostsApi());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"home-block\">\r\n      <div className=\"container\">\r\n        <Heading>Mới nhất</Heading>\r\n        <div className=\"layout\">\r\n          <NewstCardLarge data={posts[0]}></NewstCardLarge>\r\n          <div className=\"sidebar\">\r\n            {posts.slice(2, 5).map((data) => {\r\n              return <NewstCard key={data.id} data={data}></NewstCard>;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Newest);\r\n","import React from \"react\";\r\nimport Banner from \"../../layouts/Banner\";\r\nimport Feature from \"../../layouts/Feature\";\r\nimport Newest from \"../../layouts/Newest\";\r\n\r\ntype Props = {};\r\n\r\nconst Home = (props: Props) => {\r\n  return (\r\n    <>\r\n      <Banner></Banner>\r\n      <Feature></Feature>\r\n      <Newest></Newest>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_ref","children","_ref$className","className","_ref$type","type","isLoading","disabled","href","style","props","_objectWithoutProperties","_excluded","child","_jsx","Loading","NavLink","concat","to","_objectSpread","Toggle","on","_useField","useField","field","_slicedToArray","_jsxs","memo","_Fragment","DashboardHeading","title","Link","_ref$date","date","_ref$authors","authors","src","alt","display","loading","PostCard","_post$category","post","PostImage","id","image","PostCategory","category","name","PostTitle","PostMeta","createAt","author","categoryId","dispatch","useDispatch","postRelate","useSelector","state","postReducer","useEffect","getPostRelateApi","map","Button","FeatureCard","_categories$","data","categories","getCategoriesApi","imageName","Feature","getPostFeatureApi","postFeature","Heading","item","NewstCard","_data$category","NewstCardLarge","url","Newest","posts","getPostsApi","slice","Banner"],"sourceRoot":""}